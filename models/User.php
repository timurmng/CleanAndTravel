<?php

namespace app\models;

use Yii;
use yii\web\IdentityInterface;

/**
 * This is the model class for table "user".
 *
 * @property int $id
 * @property string $fullname
 * @property string $email
 * @property string $password
 * @property int $type
 */
class User extends \yii\db\ActiveRecord implements IdentityInterface
{

    const TYPE_ADMIN = 1;
    const TYPE_USER = 2;
    const TYPE_COMPANY = 3;

    const SCENARIO_CREATE = 'create';

    public static function tableName()
    {
        return 'users';
    }

    public function rules()
    {
        return [
            [['fullname', 'email', 'password'], 'required', 'on' => self::SCENARIO_CREATE],
            [['type'], 'integer'],
            [['email'], 'email'],
            [['fullname', 'email', 'password'], 'string', 'max' => 60],
        ];
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'fullname' => 'Full Name',
            'email' => 'Email',
            'password' => 'Password',
            'type' => 'Type',
        ];
    }

    public static function findByUsername($email)
    {
        return static::findOne(['email' => $email]);
    }

    /**
     * @param $password
     * @return bool
     * @throws \yii\base\Exception
     */
    public function validatePassword($password)
    {
        return yii::$app->security->validatePassword($password, $this->password);
    }

    /**
     * @throws \yii\base\Exception
     */
    public function afterValidate()
    {
        if ($this->scenario == self::SCENARIO_CREATE) {
            $this->password = yii::$app->security->generatePasswordHash($this->password);
        }

        parent::afterValidate(); // TODO: Change the autogenerated stub
    }

    public function getId()
    {
        return $this->id;
    }

    public function validateAuthKey($authKey)
    {
        return true;
    }

    public function getAuthKey()
    {
        return true;
    }

    public static function findIdentityByAccessToken($token, $type = null)
    {
        return true;
    }

    public static function findIdentity($id)
    {
        return static::findOne($id);
    }
}
